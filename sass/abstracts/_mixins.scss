@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER

/* 
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet Landscape
[1200 - 1800px]: Normar style
1800px+:        Big screens

$breakpoint argument choices:
-phone
-tab-port
-tab-land
-big desktop

ORDER: Base + Typography > General layout + grid > Page Layout > Components
*/

@mixin respond($breakpoint) {
  //max-width: 600px
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content;
    }
  }

  //max-width: 1024px
  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      @content;
    }
  }

  //max-width: 1200px
  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      @content;
    }
  }

  //max-width: 1800px
  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}

//Animations
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@include keyframes(Up) {
  from { 
    opacity: 0;
    transform: translateY(20%);
  }

  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

@include keyframes(Up) {
  from { 
    opacity: 0;
    transform: translateY(20vh);
  }

  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

@include keyframes(toRight) {
  from { 
    opacity: 0;
    transform: translateX(-20vh);
  }

  to {
    opacity: 1;
    transform: translateX(0%);
  }
}

@include keyframes(toLeft) {
  from { 
    opacity: 0;
    transform: translateX(20vh);
  }

  to {
    opacity: 1;
    transform: translateX(0%);
  }
}

